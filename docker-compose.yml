version: "3.9"

services:
  edge_service:
    image: ghcr.io/carlomicieli/consolemania-edge:latest
    depends_on:
      fluent-bit:
        condition: service_started
      tempo:
        condition: service_started
    ports:
      - 8000:8000
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.24.0.jar
      - OTEL_SERVICE_NAME=edge-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
      - CATALOG_SERVICE_URL=http://catalog_service:9000
      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=false
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.50'
          memory: 512M
    networks:
      - backend

  catalog_service:
    image: ghcr.io/carlomicieli/consolemania-catalog:latest
    depends_on:
      catalog_db:
        condition: service_healthy
      fluent-bit:
        condition: service_started
      tempo:
        condition: service_started
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.24.0.jar
      - DB_URL=jdbc:postgresql://catalog_db:5432/catalog
      - DB_USERNAME=postgres
      - DB_PASSWORD=mysecretpassword
      - RUN_DB_MIGRATIONS=false
      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=false
      - OTEL_SERVICE_NAME=catalog-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.50'
          memory: 512M
    networks:
      - backend

  catalog_db:
    image: postgres:15.2-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: catalog
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - .docker/init-db:/docker-entrypoint-initdb.d
      - catalog-db-data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G
        reservations:
          cpus: '4'
          memory: 4G
    networks:
      - backend
    healthcheck:
      test: [ CMD-SHELL, 'pg_isready -U postgres' ]
      interval: 10s
      timeout: 5s
      retries: 5

  db_admin:
    container_name: db_admin
    image: dpage/pgadmin4:6.18
    depends_on:
      catalog_db:
        condition: service_healthy
    ports:
      - 9080:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mail.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - ./.docker/pgadmin/servers.json:/pgadmin4/servers.json # preconfigured servers/connections
      - ./.docker/pgadmin/pgpass:/pgpass # passwords for the connections in this file
    networks:
      - backend

  grafana:
    image: grafana/grafana:9.1.2
    container_name: grafana
    depends_on:
      - loki
      - prometheus
      - tempo
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./.docker/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./.docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./.docker/grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - backend

  loki:
    image: grafana/loki:2.6.1
    container_name: loki
    depends_on:
      - fluent-bit
    ports:
      - "3100:3100"
    networks:
      - backend

  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:2.6.1-amd64
    container_name: fluent-bit
    ports:
      - "24224:24224"
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    volumes:
      - ./.docker/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    networks:
      - backend

  prometheus:
    image: prom/prometheus:v2.38.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./.docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend

  tempo:
    image: grafana/tempo:1.5.0
    container_name: tempo
    command: -config.file /etc/tempo-config.yml
    ports:
      - "3110:3100"     # Tempo
      - "4317:4317"     # OTel
    volumes:
      - ./.docker/tempo/tempo.yml:/etc/tempo-config.yml
    networks:
      - backend

networks:
  backend:

volumes:
  catalog-db-data:
